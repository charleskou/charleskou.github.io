{"pages":[],"posts":[{"title":"hexo 命令","text":"hexo version显示 Hexo 版本。 hexo init [folder]新建网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 hexo g生成静态文件。完整命令： 1hexo generate 监控文件变动，实时编译 1hexo generate -w hexo s启动服务器。默认情况下，访问网址为： http://localhost:4000/。-p 或 –port 参数可指定端口完整命令： 1hexo server hexo d部署网站。完整命令： 1hexo deploy hexo new ‘文章标题’新建文章。如果标题包含空格，使用引号括起来。eg: 1hexo new &quot;post title with whitespace&quot; hexo list 列出网站资料。Description:List the information of the site.Arguments: type Available types: page, post, route, tag, category hexo clean清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。","link":"/2019/08/08/hexo-command/"},{"title":"hexo 博客搭建","text":"安装nodenode -vnpm -v gitgit -v github个人仓库username.github.io hexo12npm install -g hexo-clihexo version 创建网站123hexo init blogcd blognpm install 文章1hexo new &apos;文章标题&apos; 执行完成后可以在 /source/_posts 下看到一个“文章标题.md”的文章文件 启动服务启动前先编译生成静态文件 1hexo g 1hexo s 默认访问地址：http://localhost:4000 部署hexo 博客部署 访问网站链接 域名绑定TODO 扩展主题修改下载主题文件到主目录： 12cd your-hexo-sitegit clone https://github.com/iissnan/hexo-theme-next themes/next 修改主目录下的_config.yml，指向自定义的主题： 1theme: {#theme-title} theme-title: 自定义主题的名称 主题定制字体修改：主题source文件夹下css目录示例： 1family-sans = \"Open Sans\", \"Helvetica Neue\", \"Microsoft YaHei\", sans-serif 文章内链1{% post_link post-title-sample 点此查看 %} post-title-sample - 文章名称，如果文章不存在，这段代码将会被直接忽略。 点此查看 - 链接标题。如果置空，则自动提取文章的标题。 插件代码着色https://github.com/highlightjs/highlight.jshttps://highlightjs.org/推荐样式：monokai-sublime 实时预览BrowserSync plugin for Hexo. 1npm install hexo-browsersync --save 自动摘要1npm install hexo-excerpt --save","link":"/2019/08/08/hexo-create/"},{"title":"hexo 博客部署","text":"发布流程 - V2 安装hexo-deployer-git插件 1npm install hexo-deployer-git --save 修改_config.yml配置 12345deploy: type: git repo: https://github.com/username/username.github.io.git branch: master message: 编译 1hexo g 部署 1hexo d 等待2min左右，页面展示。 V2流程中, 步骤1、2只需执行一次。 原理当初次新建一个库的时候，库将自动包含一个master分支。请在这个分支下进行写作和各种配置来完善您的网页。当执行hexo deploy时，Hexo会创建或更新另外一个用于部署的分支，这个分支就是_config.yml配置文件中指定的分支。Hexo会将生成的站点文件推送至该分支下，并且完全覆盖该分支下的已有内容。因此，部署分支应当不同于写作分支。（一个推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。）值得注意的是，hexo deploy并不会对本地或远程的写作分支进行任何操作，因此依旧需要手动推送写作分支的所有改动以实现版本控制。此外，如果您的Github Pages需要使用CNAME文件自定义域名，请将CNAME文件置于写作分支的source_dir目录下，只有这样hexo deploy才能将CNAME文件一并推送至部署分支。 发布流程 - V1 编译：hexo g src分支代码提交 xshell同步到阿里云服务器 服务器端git提交 等待2min左右，页面展示 Tip：服务器初次提交Git配置： 12git config --global user.email &quot;username@xx.com&quot;git config --global user.name &quot;username&quot; 提交时输入username和密码。","link":"/2019/08/09/hexo-deploy/"},{"title":"Git Subtree","text":"推送指定文件夹到远程主机指定分支1git subtree push --prefix public origin master public - 指定文件夹master - 指定分支","link":"/2019/08/09/git-subtree/"},{"title":"study","text":"网站优秀博客：https://www.cnkirito.moe/ 插件网站：https://github.com/ppoffice","link":"/2019/08/09/study/"}],"tags":[{"name":"git","slug":"git","link":"/tags/git/"},{"name":"TODO","slug":"TODO","link":"/tags/TODO/"}],"categories":[]}