{"pages":[],"posts":[{"title":"markdown","text":"Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。 标题123# 这是一级标题## 这是二级标题### 这是三级标题 引用12&gt;这是引用的内容&gt;&gt;这是引用的内容 分割线12---*** 图片1234![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 链接12[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加 代码单行代码： 1`单行代码` 多行代码： 1234(```)多行代码多行代码(```) 前后三个反引号处加了小括号，实际是没有的。这里只是用来演示。 列表123- 列表内容 1. 列表嵌套 2. 嵌套","link":"/2019/08/10/markdown/"},{"title":"android","text":"版本 9 IDEAndroid Studio valval a: Int = ch.toInt(); var 变量val 常量 常量不能再次更改 boolean arrayOf Array 日志 swith ==&gt; when for 倒序遍历 init 主构造函数 lateinit 懒加载internal 模块内部可见 inner class 内部类 function ==&gt; fun 四大组件activity 页面 生命周期service 后台 如音乐播放器broadcast receivers 广播接收器 注册监听 顺序 优先级content providers 内容提供者组件 Intent 组件间传值 隐式意图 五大布局 数据库访问 动画 混淆签名打包发布 data class 与 普通class 为什么不用java用kotlin http调用 okhttp 第三方包引用反编译 页面复用 css样式 框架","link":"/2019/08/10/android/"},{"title":"study","text":"网站优秀博客：https://www.cnkirito.moe/ 插件网站：https://github.com/ppoffice","link":"/2019/08/09/study/"},{"title":"hexo 博客搭建","text":"安装nodenode -vnpm -v gitgit -v github个人仓库username.github.io hexo12npm install -g hexo-clihexo version 创建网站123hexo init blogcd blognpm install 文章1hexo new &apos;文章标题&apos; 执行完成后可以在 /source/_posts 下看到一个“文章标题.md”的文章文件 启动服务启动前先编译生成静态文件 1hexo g 1hexo s 默认访问地址：http://localhost:4000 部署hexo 博客部署 访问网站链接 域名绑定TODO 扩展主题修改下载主题文件到主目录： 12cd your-hexo-sitegit clone https://github.com/iissnan/hexo-theme-next themes/next 修改主目录下的_config.yml，指向自定义的主题： 1theme: {#theme-title} theme-title: 自定义主题的名称 主题定制字体修改：主题source文件夹下css目录示例： 1family-sans = \"Open Sans\", \"Helvetica Neue\", \"Microsoft YaHei\", sans-serif 文章内链1{% post_link post-title-sample 点此查看 %} post-title-sample - 文章名称，如果文章不存在，这段代码将会被直接忽略。 点此查看 - 链接标题。如果置空，则自动提取文章的标题。 插件代码着色https://github.com/highlightjs/highlight.jshttps://highlightjs.org/推荐样式：monokai-sublime 实时预览BrowserSync plugin for Hexo. 1npm install hexo-browsersync --save 自动摘要1npm install hexo-excerpt --save","link":"/2019/08/08/hexo/hexo-create/"},{"title":"hexo 命令","text":"hexo version显示 Hexo 版本。 hexo init [folder]新建网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 hexo g生成静态文件。完整命令： 1hexo generate 监控文件变动，实时编译 1hexo generate -w hexo s启动服务器。默认情况下，访问网址为： http://localhost:4000/。-p 或 –port 参数可指定端口完整命令： 1hexo server hexo d部署网站。完整命令： 1hexo deploy hexo new ‘文章标题’新建文章。如果标题包含空格，使用引号括起来。eg: 1hexo new &quot;post title with whitespace&quot; hexo list 列出网站资料。Description:List the information of the site.Arguments: type Available types: page, post, route, tag, category hexo clean清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。","link":"/2019/08/08/hexo/hexo-command/"},{"title":"Eclipse","text":"自动升级 原文链接：https://download.eclipse.org/releases/2019-06/","link":"/2019/08/10/java/eclipse/"},{"title":"hexo 博客部署","text":"发布流程 - V2 安装hexo-deployer-git插件 1npm install hexo-deployer-git --save 修改_config.yml配置 12345deploy: type: git repo: https://github.com/username/username.github.io.git branch: master message: 编译 1hexo g 部署 1hexo d 等待2min左右，页面展示。 V2流程中, 步骤1、2只需执行一次。 原理当初次新建一个库的时候，库将自动包含一个master分支。请在这个分支下进行写作和各种配置来完善您的网页。当执行hexo deploy时，Hexo会创建或更新另外一个用于部署的分支，这个分支就是_config.yml配置文件中指定的分支。Hexo会将生成的站点文件推送至该分支下，并且完全覆盖该分支下的已有内容。因此，部署分支应当不同于写作分支。（一个推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。）值得注意的是，hexo deploy并不会对本地或远程的写作分支进行任何操作，因此依旧需要手动推送写作分支的所有改动以实现版本控制。此外，如果您的Github Pages需要使用CNAME文件自定义域名，请将CNAME文件置于写作分支的source_dir目录下，只有这样hexo deploy才能将CNAME文件一并推送至部署分支。 发布流程 - V1 编译：hexo g src分支代码提交 xshell同步到阿里云服务器 服务器端git提交 等待2min左右，页面展示 Tip：服务器初次提交Git配置： 12git config --global user.email &quot;username@xx.com&quot;git config --global user.name &quot;username&quot; 提交时输入username和密码。","link":"/2019/08/09/hexo/hexo-deploy/"},{"title":"design-pattern","text":"","link":"/2019/08/10/java/design-pattern/"},{"title":"guava","text":"","link":"/2019/08/10/java/guava/"},{"title":"lambda","text":"","link":"/2019/08/10/java/lambda/"},{"title":"Maven","text":"常用命令12345mvn cleanmvn packagemvn installmvn clean package -DskipTestsmvn clean package -DskipTests -U mvn install 会将项目生成的构件安装到本地Maven仓库 mirror阿里镜像： 123456&lt;mirror&gt; &lt;id&gt;repo2&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;human readable name for this mirror.&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/mirror&gt; nexusmaven私服 配置参考配置文件路径(示例)：C:\\Users\\username.m2\\settings.xml 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;&lt;settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/xsd/settings-1.0.0.xsd\"&gt; &lt;localRepository/&gt; &lt;pluginGroups&gt; &lt;pluginGroup&gt;org.sonarsource.scanner.maven&lt;/pluginGroup&gt; &lt;/pluginGroups&gt; &lt;profiles&gt; &lt;profile&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;url&gt;http://private.mvnrepository.com/repository/maven-public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;/profile&gt; &lt;/profiles&gt; &lt;activeProfiles&gt; &lt;activeProfile&gt;nexus&lt;/activeProfile&gt; &lt;/activeProfiles&gt; &lt;servers&gt; &lt;server&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;username&gt;username&lt;/username&gt; &lt;password&gt;password&lt;/password&gt; &lt;/server&gt; &lt;/servers&gt; &lt;mirrors&gt; &lt;mirror&gt; &lt;id&gt;repo2&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;human readable name for this mirror.&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/mirror&gt; &lt;/mirrors&gt;&lt;/settings&gt; 上传至私服1mvn deploy 用来将项目生成的构件分发到远程Maven仓库 123456789101112&lt;distributionManagement&gt; &lt;repository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;name&gt;Nexus Release&lt;/name&gt; &lt;url&gt;http://private.mvnrepository.com/repository/maven-releases/&lt;/url&gt; &lt;/repository&gt; &lt;snapshotRepository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;name&gt;Nexus Snapshot&lt;/name&gt; &lt;url&gt;http://private.mvnrepository.com/repository/maven-snapshots/&lt;/url&gt; &lt;/snapshotRepository&gt;&lt;/distributionManagement&gt; Maven区别对待release版本的构件和snapshot版本的构件，snapshot为开发过程中的版本，实时，但不稳定，release版本则比较稳定。Maven会根据你项目的版本来判断将构件分发到哪个仓库。","link":"/2019/08/10/java/maven/"},{"title":"Postman","text":"Requestheadersbody PresetsCollectionExport &amp; ImportEnvironmentMockTest123456pm.test(\"Response is Success\", function () { pm.response.to.have.status(200); var jsonData = pm.response.json(); pm.expect(jsonData.success).to.eql(true); pm.expect(jsonData.messageId).to.eql(\"10000\");}); RunnerWorkspaceTeam","link":"/2019/08/10/java/postman/"},{"title":"elk","text":"组件语法使用双引号包起来作为一个短语搜索 “like Gecko”返回结果中需要有http字段 exists:http不能含有http字段 missing:http匹配单个字符 ?匹配0到多个字符 * 搜索结果中必须包含此项 +不能含有此项 -","link":"/2019/08/10/tools/elk/"},{"title":"Grafana","text":"Time series return column named time or time_sec (in UTC), as a unix time stamp or any sql native date data type. You can use the macros below. return column(s) with numeric datatype as valuesOptional: return column named metric to represent the series name. If multiple value columns are returned the metric column is used as prefix. If no column named metric is found the column name of the value column is used as series nameResultsets of time series queries need to be sorted by time. 时间选择","link":"/2019/08/10/tools/grafana/"},{"title":"Git Subtree","text":"推送指定文件夹到远程主机指定分支1git subtree push --prefix public origin master public - 指定文件夹master - 指定分支","link":"/2019/08/09/tools/git-subtree/"},{"title":"Jira","text":"","link":"/2019/08/10/tools/jira/"},{"title":"sublime","text":"","link":"/2019/08/10/tools/sublime/"},{"title":"vscode","text":"实时预览 Ctrl + Shift + P 调出主命令框，输入 Markdown，应该会匹配到几项 Markdown相关命令, 选择Markdown: Open Preview to the Side，就能调出实时预览框 先按Ctrl + K，然后放掉，紧接着再按 v，也能调出实时预览框 ##","link":"/2019/08/10/tools/vscode/"}],"tags":[{"name":"工具","slug":"工具","link":"/tags/工具/"},{"name":"TODO","slug":"TODO","link":"/tags/TODO/"},{"name":"Java, TODO, 工具","slug":"Java-TODO-工具","link":"/tags/Java-TODO-工具/"},{"name":"Java, TODO","slug":"Java-TODO","link":"/tags/Java-TODO/"},{"name":"Java, 工具","slug":"Java-工具","link":"/tags/Java-工具/"},{"name":"TODO, Java, 工具","slug":"TODO-Java-工具","link":"/tags/TODO-Java-工具/"},{"name":"TODO, 工具","slug":"TODO-工具","link":"/tags/TODO-工具/"},{"name":"git","slug":"git","link":"/tags/git/"}],"categories":[]}